"""
Модуль для проверки 
грамматики с использованием API от turgenev.ashmanov.com

Много(параметр risk) — это если риск высокий (от 8 баллов) или, тем более, 
критический (от 13). 
Впрочем, средний (от 5) — это тоже не очень хорошо.
"""
#На выходе check_text_turgenev(text) получаем:
#data = {'link': 'md50b417075b6af51185bacf0b39ba58e', 'level': 'низкий', 'details': [{'params': [{'value': '9.42', 'name': '«Академическая тошнота»', 'score': 0}, {'value': '6.26', 'name': '«Тошнота» словосочетаний', 'score': 1}, {'value': '3.00', 'name': '«Классическая тошнота»', 'score': 0}, {'value': 'Нет', 'name': 'Сверхчастые слова', 'score': 0}, {'value': 'Нет', 'name': 'Сверхконцентрация «и»', 'score': 0}], 'link': 'dd50b417075b6af51185bacf0b39ba58e', 'block': 'frequency', 'sum': 1}, {'params': [{'value': '0.05', 'name': 'Плотность стилистических проблем', 'score': 0}, {'value': 19, 'name': 'Количество стилистических проблем', 'score': 0}], 'link': 'sd50b417075b6af51185bacf0b39ba58e', 'block': 'style', 'sum': 0}, {'params': [{'value': '0.04', 'name': 'Покрытие ключевыми словами', 'score': 0}], 'link': 'qd50b417075b6af51185bacf0b39ba58e', 'block': 'keywords', 'sum': 0}, {'params': [{'value': '0.36', 'name': 'Доля содержательного текста', 'score': 0}, {'value': '0.29', 'name': 'Водность', 'score': 0}], 'link': 'fd50b417075b6af51185bacf0b39ba58e', 'block': 'formality', 'sum': 0}, {'params': [{'value': '15.2', 'name': 'Индекс удобочитаемости ', 'score': 1}], 'link': 'rd50b417075b6af51185bacf0b39ba58e', 'block': 'readability', 'sum': 1}], 'risk': 2}


import requests

key = 'f0b8c0e34017e150df1fbca0cab85e59'
text = 'В сентябре 2023 года из-за некачественной еды от Greenbox пострадало больше 270 человек.  Госорганы приняли к производству три иска, сообщила объединённая пресс-служба судов Санкт-Петербурга. Пострадавшая Вера, попавшая в больницу с сальмонеллёзом, просит взыскать с юрлица «Самоката» — ООО «Умный ритейл» — 200 тысяч рублей за моральный ущерб и штраф в 50% от присуждённой суммы. Истец Елена, у которой диагностировали острый энтерит, потребовала от АО «Грин Бокс» (работает под брендом Greenbox) выплатить ей 210 тысяч рублей в качестве компенсации морального вреда и ещё 10 тысяч рублей за расходы на юридические услуги. Надежда, которой поставили диагноз «острый гастроэнтерит», сначала пыталась урегулировать спор с АО «Грин Бокс» в досудебном порядке. Оно перечислило пострадавшей 11,9 тысячи рублей: 199 рублей за купленную продукцию, 1691 рубль за расходы на лечение и 10 тысяч за моральный ущерб. Через суд Надежда просит взыскать с юрлица 190 тысяч рублей и штраф в 50%. Все иски связаны с отравлением шпинатными вафлями производителя готовой еды Greenbox, которые продавались в «Самокате» в сентябре 2023 года. От них пострадало больше 270 жителей Санкт-Петербурга, некоторые из них попали в больницу в состоянии средней тяжести. Следственный комитет возбудил уголовное дело, а суд принял дело о нарушении санитарно-эпидемиологических норм: Greenbox подозревали в некачественной уборке помещений, наличии мух и тараканов на кухнях, отсутствии бактерицидного оборудования, допуске к работе сотрудников без медицинских книжек и других нарушениях. 14 сентября Приморский районный суд Санкт-Петербурга приостановил работу Greenbox на два месяца. Представитель фирмы частично признал нарушение. Этот же суд оштрафовал «Умный ритейл» на 20 тысяч рублей за нарушение «санитарно-эпидемиологического благополучия населения» (ч.1 ст.6.3 КоАП РФ): за отсутствие условий для соблюдения работниками личной гигиены и системы канализации и водоснабжения, несоблюдение требований по сбору и обращению с отходами и другое. Ещё один штраф в 20 тысяч рублей «Самокат» выплатил по требованию Невского районного суда — по той же статье. В пресс-службе сервиса тогда заявляли, что «нарушения носили локальный характер и не были причиной отравления».'

def check_text_turgenev(text):
    """Проверка текста на угрозу риска алгоритма Баден-Баден"""
    url = 'https://turgenev.ashmanov.com/'
    payload = {
        'key':key,
        'text':text,
        'api':'risk',
        'more': 1
    }
    r=requests.post(url, data=payload)
    return r.json()



